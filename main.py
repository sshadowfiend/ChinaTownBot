import telebot
from telebot import types
from get_cost import check_rate
from tg_token import api_key


bot = telebot.TeleBot(api_key)


@bot.message_handler(commands=['menu', 'start'])
def menu(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    btn1 = types.KeyboardButton('–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—åüí∞')
    markup.row(btn1)

    btn2 = types.KeyboardButton('–û—Ç–∑—ã–≤—ã‚úçÔ∏è')
    btn3 = types.KeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüë®‚Äçüíª')
    markup.row(btn2, btn3)

    btn5 = types.KeyboardButton('–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã‚ùì')
    btn6 = types.KeyboardButton('–ú–µ–Ω—é‚öôÔ∏è')
    markup.row(btn5, btn6)


    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} {message.from_user.last_name} \n\n"
    f"–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ \n–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º \n@p0iman \n" 
    f"–ê —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã", reply_markup=markup)


@bot.message_handler(commands=['get_cost'])
def cost(message):
    bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –Æ–∞–Ω—è—Ö")
    bot.register_next_step_handler(message, exchange)


def exchange(message):

    exchange_rate = check_rate()

    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('–ú–µ–Ω–µ–¥–∂–µ—Äüë®‚Äçüíª', url='https://t.me/p0iman')
    markup.row(btn1)

    try:
        float(message.text) * exchange_rate
    except ValueError:
        bot.reply_to(message, f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥")
    except TypeError:
        bot.reply_to(message, f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥")
    else:
        res = int(float(message.text) * exchange_rate) + 2500
        bot.send_message(message.chat.id, f"–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å {res}‚ÇΩ \n–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–∞–µ—Ç: \n–î–æ—Å—Ç–∞–≤–∫—É –∏–∑ –ö–∏—Ç–∞—è –≤ –ú–æ—Å–∫–≤—É - 1500‚ÇΩ"
                                          f"\n–ö–æ–º–º–∏—Å–∏—é –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ - 1000‚ÇΩ\n<b>–ö—É—Ä—Å ¬• - {exchange_rate}‚ÇΩ</b>", reply_markup=markup, parse_mode='html')


@bot.message_handler(commands=['reviews'])
def reviews(message):
    bot.send_message(message.chat.id, f"<b>–û—Ç–∑—ã–≤—ã:</b> https://t.me/chinatown_otzyv", parse_mode='html')


@bot.message_handler(commands=['manager'])
def manager(message):
    bot.send_message(message.chat.id, f"<b>–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä:</b> @p0iman", parse_mode='html')


@bot.message_handler(commands=['questions'])
def questions(message):
    markup = types.InlineKeyboardMarkup()

    btn1 = types.InlineKeyboardButton('üìå–ö–∞–∫ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç?', callback_data='how to use')
    btn2 = types.InlineKeyboardButton('üìå–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä?', callback_data='how to choose product')

    markup.row(btn1)
    markup.row(btn2)

    btn3 = types.InlineKeyboardButton('üìå–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä', callback_data='how to choose size')
    btn4 = types.InlineKeyboardButton('üìå–ö–∞–∫ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É?', callback_data='how to copy link')

    markup.row(btn3)
    markup.row(btn4)

    bot.send_message(message.chat.id, f'–ï—Å–ª–∏ –≤—ã <b>–Ω–µ –Ω–∞—à–ª–∏</b> –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É @p0iman', reply_markup=markup, parse_mode='html')


@bot.message_handler(content_types=['text'])
def processing(message):
    if message.text == '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—åüí∞':
        cost(message)
    elif message.text == '–û—Ç–∑—ã–≤—ã‚úçÔ∏è':
        reviews(message)
    elif message.text == '–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—Éüë®‚Äçüíª':
        manager(message)
    elif message.text == '–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã‚ùì':
        questions(message)
    elif message.text == '–ú–µ–Ω—é‚öôÔ∏è':
        menu(message)


@bot.message_handler(content_types=['photo'])
@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):

    if callback.data == 'how to use':
        bot.send_message(callback.message.chat.id, f"<b>–ö–∞–∫ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>\n\n"
                                                   f"<b>1. –ù–∞–ø–∏—à–∏ @p0iman –∏ —Ä–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å, –ø—Ä–∏–∫—Ä–µ–ø–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç.</b>\n\n"
                                                   f"<b>2. –ú—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —Ä–∞—Å—á—ë—Ç –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.</b>\n\n"
                                                   f"<b>3. –ü—Ä–æ–∏–∑–≤–æ–¥–∏—à—å –æ–ø–ª–∞—Ç—É —Ç–æ–≤–∞—Ä–∞.</b>\n\n"
                                                   f"<b>4. –ú—ã –æ–ø–ª–∞—á–∏–≤–∞–µ–º –∏ –æ—Ñ–æ—Ä–º–ª—è–µ–º —Ç–≤–æ–π –∑–∞–∫–∞–∑, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —á–µ–∫–∏.</b>\n\n"
                                                   f"<b>5. –û—Å—Ç–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –∂–¥–∞—Ç—å –ø–æ–∫–∞ —Ç–≤–æ–π —Ç–æ–≤–∞—Ä –ø—Ä–∏–µ–¥–µ—Ç. –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —Ç—ã –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ –ª—é–±–æ–º—É –≤–æ–ø—Ä–æ—Å—É.</b>", parse_mode='html')

    elif callback.data == 'how to choose product':
        bot.send_message(callback.message.chat.id, f"<b>–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä?\n\n"
                                                   f"1. –ó–∞—Ö–æ–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ dewu (POIZON)\n"
                                                   f"<i>https://apps.apple.com/app/id1012871328</i>\n\n"
                                                   f"2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å –ø–æ —Å–≤–æ–µ–º—É –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n\n"
                                                   f"3. –ù–∞—Ö–æ–¥–∏—Ç–µ —Ç–æ–≤–∞—Ä –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.\n\n"
                                                   f"4. –í—ã–±–∏—Ä–∞–µ—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–º–µ—Ä.\n\n"
                                                   f"5. –ò —Å–∫–∏–¥—ã–≤–∞–µ—Ç–µ —Å—Å—ã–ª–∫—É –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç @p0iman</b>", parse_mode='html', disable_web_page_preview=True)

    elif callback.data == 'how to choose size':
        '''bot.send_media_group(callback.message.chat.id, [types.InputMediaPhoto(open('photo_5188322199126265612_y.jpg', 'rb')),
                                               types.InputMediaPhoto(open('photo_5188322199126265613_y.jpg', 'rb'))])'''
        pic1 = open('photo_5188322199126265612_y.jpg', 'rb')
        pic2 = open('photo_5188322199126265613_y.jpg', 'rb')
        media = [types.InputMediaPhoto(pic1, caption="<b>–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä</b>", parse_mode='html'), types.InputMediaPhoto(pic2)]
        bot.send_media_group(callback.message.chat.id, media)

    elif callback.data == 'how to copy link':
        '''bot.send_media_group(callback.message.chat.id,
                             [types.InputMediaPhoto(open('photo_5188322199126265616_y.jpg', 'rb')),
                              types.InputMediaPhoto(open('photo_5188322199126265617_y.jpg', 'rb'))])'''
        pic1 = open('photo_5188322199126265616_y.jpg', 'rb')
        pic2 = open('photo_5188322199126265617_y.jpg', 'rb')
        media = [types.InputMediaPhoto(pic1, caption="<b>–ö–∞–∫ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É</b>", parse_mode='html'), types.InputMediaPhoto(pic2)]
        bot.send_media_group(callback.message.chat.id, media)


bot.polling(none_stop=True)
